{"remainingRequest":"/home/daniel/projects/1-personal/vuepress-lwd/node_modules/babel-loader/lib/index.js??ref--3-1!/home/daniel/projects/1-personal/vuepress-lwd/node_modules/@vuepress/core/.temp/internal/siteData.js","dependencies":[{"path":"/home/daniel/projects/1-personal/vuepress-lwd/node_modules/@vuepress/core/.temp/internal/siteData.js","mtime":1606088838280},{"path":"/home/daniel/projects/1-personal/vuepress-lwd/node_modules/cache-loader/dist/cjs.js","mtime":1602965084467},{"path":"/home/daniel/projects/1-personal/vuepress-lwd/node_modules/babel-loader/lib/index.js","mtime":1602965084461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:/**
 * Generated by "@vuepress/internal-site-data"
 */
export var siteData = {
  "title": "Learn with Daniel - A learner diary",
  "description": "A learner diary",
  "base": "/",
  "headTags": [["link", {
    "rel": "icon",
    "href": "/favicon-128.png"
  }]],
  "pages": [{
    "title": "Hi, I'm Daniel the Learner",
    "frontmatter": {
      "title": "Hi, I'm Daniel the Learner",
      "date": "2015-01-15T00:00:00.000Z",
      "tags": [],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-01-15-about/",
    "relativePath": "_posts/2015-01-15-about/README.md",
    "key": "v-86a2d518",
    "path": "/2015/01/about/",
    "headers": [{
      "level": 2,
      "title": "About me",
      "slug": "about-me"
    }],
    "excerpt": "<p>Hi, my name is Daniel.</p>\n",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.98,
      "time": 58800,
      "words": 196
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Install PHP 5.6 on Ubuntu 14.10",
    "frontmatter": {
      "title": "Install PHP 5.6 on Ubuntu 14.10",
      "date": "2015-01-16T00:00:00.000Z",
      "tags": ["Configuration", "Linux", "Server"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-01-16-install-php-5-6-apache-on-ubuntu/",
    "relativePath": "_posts/2015-01-16-install-php-5-6-apache-on-ubuntu/README.md",
    "key": "v-bbadcdf4",
    "path": "/2015/01/install-php-5-6-apache-on-ubuntu/",
    "headers": [{
      "level": 2,
      "title": "Our recipe",
      "slug": "our-recipe"
    }, {
      "level": 3,
      "title": "1. We need Apache 2.4",
      "slug": "_1-we-need-apache-2-4"
    }, {
      "level": 2,
      "title": "2. Remove the old PHP, install the new PPA and reinstall PHP",
      "slug": "_2-remove-the-old-php-install-the-new-ppa-and-reinstall-php"
    }, {
      "level": 2,
      "title": "3. Create a test site",
      "slug": "_3-create-a-test-site"
    }, {
      "level": 2,
      "title": "4. Create the Apache .conf file (don't forget the \".conf\" extension!)",
      "slug": "_4-create-the-apache-conf-file-don-t-forget-the-conf-extension"
    }, {
      "level": 2,
      "title": "5. Enable the site and restart Apache",
      "slug": "_5-enable-the-site-and-restart-apache"
    }, {
      "level": 2,
      "title": "6. Open the site in your browser and check if it's all working",
      "slug": "_6-open-the-site-in-your-browser-and-check-if-it-s-all-working"
    }],
    "excerpt": "<p>Let's see how to upgrade <strong>PHP 5.5</strong> to a newer version on <strong>Ubuntu 14.10</strong>.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.155,
      "time": 129299.99999999999,
      "words": 431
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "WordPress 4.1 on Ubuntu 14.10 How To",
    "frontmatter": {
      "title": "WordPress 4.1 on Ubuntu 14.10 How To",
      "date": "2015-01-17T00:00:00.000Z",
      "tags": ["Linux", "Server", "Configuration"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-01-17-install-wordpress-4-1-on-ubuntu-14-10/",
    "relativePath": "_posts/2015-01-17-install-wordpress-4-1-on-ubuntu-14-10/README.md",
    "key": "v-61443b5e",
    "path": "/2015/01/install-wordpress-4-1-on-ubuntu-14-10/",
    "headers": [{
      "level": 2,
      "title": "The recipe",
      "slug": "the-recipe"
    }, {
      "level": 3,
      "title": "1. Get a domain",
      "slug": "_1-get-a-domain"
    }, {
      "level": 3,
      "title": "2. Get a cloud server",
      "slug": "_2-get-a-cloud-server"
    }, {
      "level": 3,
      "title": "3. Download WordPress",
      "slug": "_3-download-wordpress"
    }, {
      "level": 3,
      "title": "4. Have Apache + PHP 5 + MySQL installed",
      "slug": "_4-have-apache-php-5-mysql-installed"
    }, {
      "level": 3,
      "title": "5. Create a PHP folder for the WP and create the Apache configuration",
      "slug": "_5-create-a-php-folder-for-the-wp-and-create-the-apache-configuration"
    }, {
      "level": 3,
      "title": "5. Enable the site, test, restart Apache",
      "slug": "_5-enable-the-site-test-restart-apache"
    }, {
      "level": 3,
      "title": "6. Point your DNS to your cloud server",
      "slug": "_6-point-your-dns-to-your-cloud-server"
    }, {
      "level": 3,
      "title": "7. Access your site on a browser and configure WP",
      "slug": "_7-access-your-site-on-a-browser-and-configure-wp"
    }, {
      "level": 2,
      "title": "Hints",
      "slug": "hints"
    }, {
      "level": 2,
      "title": "Done!",
      "slug": "done"
    }],
    "excerpt": "<p>WordPress is the &quot;de facto&quot; standard for blogs.</p>\n<p>Furthermore, WP is not restricted to blogs only – WP is largely used as a CMS to create non-blog websites. <a href=\"https://w3techs.com/technologies/details/cm-wordpress/all/all\" target=\"_blank\" rel=\"noopener noreferrer\">23% of the whole internet<OutboundLink/></a> is built on WordPress. Sites like Time, TechCrunch, The New Yorker, Fortune, Variety, Sony, Reuters, GM, Best Buy, and so on. And more important: WP is the platform I chose to publish this blog 😃</p>\n",
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.515,
      "time": 330900,
      "words": 1103
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Rails Server with Apache + Puma (via reverse proxy)",
    "frontmatter": {
      "title": "Rails Server with Apache + Puma (via reverse proxy)",
      "date": "2015-01-20T00:00:00.000Z",
      "tags": ["Linux", "Server", "Configuration"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-01-20-apache-puma-via-reverse-proxy/",
    "relativePath": "_posts/2015-01-20-apache-puma-via-reverse-proxy/README.md",
    "key": "v-5df6affc",
    "path": "/2015/01/apache-puma-via-reverse-proxy/",
    "headers": [{
      "level": 2,
      "title": "Passenger vs Puma vs Unicorn",
      "slug": "passenger-vs-puma-vs-unicorn"
    }, {
      "level": 2,
      "title": "1. Add puma to Gemfile",
      "slug": "_1-add-puma-to-gemfile"
    }, {
      "level": 2,
      "title": "2. Create/replace contents of puma.rb",
      "slug": "_2-create-replace-contents-of-puma-rb"
    }, {
      "level": 2,
      "title": "3. Create a ./tmp/puma folder",
      "slug": "_3-create-a-tmp-puma-folder"
    }, {
      "level": 2,
      "title": "4. Permissions: Add your user to www-data group",
      "slug": "_4-permissions-add-your-user-to-www-data-group"
    }, {
      "level": 2,
      "title": "5. Permissions: Set group permissions",
      "slug": "_5-permissions-set-group-permissions"
    }, {
      "level": 2,
      "title": "6. Download init scripts (Jungle)",
      "slug": "_6-download-init-scripts-jungle"
    }, {
      "level": 2,
      "title": "7. Install init scripts",
      "slug": "_7-install-init-scripts"
    }, {
      "level": 2,
      "title": "8. Set which projects will be managed by Jungle",
      "slug": "_8-set-which-projects-will-be-managed-by-jungle"
    }, {
      "level": 2,
      "title": "9. Start Puma (Jungle) service",
      "slug": "_9-start-puma-jungle-service"
    }, {
      "level": 2,
      "title": "10. Test if service can be stopped",
      "slug": "_10-test-if-service-can-be-stopped"
    }, {
      "level": 2,
      "title": "11. Install mod_proxy and mod_proxy_http",
      "slug": "_11-install-mod-proxy-and-mod-proxy-http"
    }, {
      "level": 2,
      "title": "12. Edit your domain #1 configuration",
      "slug": "_12-edit-your-domain-1-configuration"
    }, {
      "level": 2,
      "title": "13. Enable your domain #1 and restart Apache",
      "slug": "_13-enable-your-domain-1-and-restart-apache"
    }, {
      "level": 2,
      "title": "OPTIONAL: Using a different user other than www-data for Puma processes",
      "slug": "optional-using-a-different-user-other-than-www-data-for-puma-processes"
    }, {
      "level": 3,
      "title": "All commands as root user",
      "slug": "all-commands-as-root-user"
    }, {
      "level": 3,
      "title": "Create the user/group",
      "slug": "create-the-user-group"
    }, {
      "level": 3,
      "title": "Add it to RVM (if using RVM)",
      "slug": "add-it-to-rvm-if-using-rvm"
    }, {
      "level": 3,
      "title": "Change folder ownership",
      "slug": "change-folder-ownership"
    }, {
      "level": 3,
      "title": "Change /etc/puma.conf",
      "slug": "change-etc-puma-conf"
    }, {
      "level": 3,
      "title": "Reload service",
      "slug": "reload-service"
    }],
    "excerpt": "<p>Let's run a Rails server using Puma and Apache. We will use Apache's reverse proxy and Puma's Jungle service.</p>\n",
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.705,
      "time": 282300,
      "words": 941
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "CityState Gem: Cities, states and countries in Ruby/Rails",
    "frontmatter": {
      "title": "CityState Gem: Cities, states and countries in Ruby/Rails",
      "date": "2015-02-15T00:00:00.000Z",
      "tags": ["Rails", "Ruby", "Gem"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-02-15-citystate-list-of-countries-cities-and-states-ruby/",
    "relativePath": "_posts/2015-02-15-citystate-list-of-countries-cities-and-states-ruby/README.md",
    "key": "v-a0354e74",
    "path": "/2015/02/citystate-list-of-countries-cities-and-states-ruby/",
    "headers": [{
      "level": 2,
      "title": "Install",
      "slug": "install"
    }, {
      "level": 2,
      "title": "Usage",
      "slug": "usage"
    }, {
      "level": 2,
      "title": "Updating the database from the internet",
      "slug": "updating-the-database-from-the-internet"
    }, {
      "level": 3,
      "title": "MaxMind requires a license key (for free) to get download updates",
      "slug": "maxmind-requires-a-license-key-for-free-to-get-download-updates"
    }, {
      "level": 2,
      "title": "How to use it on a form?",
      "slug": "how-to-use-it-on-a-form"
    }, {
      "level": 2,
      "title": "How to populate cities when the state is changed?",
      "slug": "how-to-populate-cities-when-the-state-is-changed"
    }],
    "excerpt": "<p>Let's say you have a form asking for a city and state. How do you populate these fields?</p>\n<p>This requirement is omnipresent in almost every website, and yet there's no library to deal with this.</p>\n",
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.55,
      "time": 273000,
      "words": 910
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Host your own email domain with Exim4",
    "frontmatter": {
      "title": "Host your own email domain with Exim4",
      "date": "2015-02-16T00:00:00.000Z",
      "tags": ["Linux", "Server", "Configuration"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-02-16-host-email-domain-free/",
    "relativePath": "_posts/2015-02-16-host-email-domain-free/README.md",
    "key": "v-80b4dc74",
    "path": "/2015/02/host-email-domain-free/",
    "headers": [{
      "level": 2,
      "title": "Ingredients",
      "slug": "ingredients"
    }, {
      "level": 2,
      "title": "Our recipe",
      "slug": "our-recipe"
    }, {
      "level": 3,
      "title": "1. Let's implement 3 email addresses",
      "slug": "_1-let-s-implement-3-email-addresses"
    }, {
      "level": 3,
      "title": "2. Create your DNS records",
      "slug": "_2-create-your-dns-records"
    }, {
      "level": 3,
      "title": "3. Install Exim4",
      "slug": "_3-install-exim4"
    }, {
      "level": 3,
      "title": "4. Re-create the configuration files",
      "slug": "_4-re-create-the-configuration-files"
    }, {
      "level": 3,
      "title": "5. Edit /etc/exim4/update-exim4.conf.conf",
      "slug": "_5-edit-etc-exim4-update-exim4-conf-conf"
    }, {
      "level": 3,
      "title": "6. Remove the override configuration file, if existing",
      "slug": "_6-remove-the-override-configuration-file-if-existing"
    }, {
      "level": 3,
      "title": "7. Re-create the auto-generated config file (/var/lib/exim4/config.autogenerated)",
      "slug": "_7-re-create-the-auto-generated-config-file-var-lib-exim4-config-autogenerated"
    }, {
      "level": 3,
      "title": "8. Create a folder /etc/valias",
      "slug": "_8-create-a-folder-etc-valias"
    }, {
      "level": 3,
      "title": "9. Create a configuration file for each domain in /etc/valiases",
      "slug": "_9-create-a-configuration-file-for-each-domain-in-etc-valiases"
    }, {
      "level": 3,
      "title": "10. Edit /etc/exim4/conf.d/main/01_exim4-config_listmacrosdefs",
      "slug": "_10-edit-etc-exim4-conf-d-main-01-exim4-config-listmacrosdefs"
    }, {
      "level": 3,
      "title": "11. Edit /etc/exim4/conf.d/router/350_exim4-config_vdom_aliases",
      "slug": "_11-edit-etc-exim4-conf-d-router-350-exim4-config-vdom-aliases"
    }, {
      "level": 3,
      "title": "12. Add your domains to /etc/hosts (OPTIONAL – just for speed sake)",
      "slug": "_12-add-your-domains-to-etc-hosts-optional-just-for-speed-sake"
    }, {
      "level": 3,
      "title": "13. Re-start exim4 service",
      "slug": "_13-re-start-exim4-service"
    }, {
      "level": 3,
      "title": "14. Test if it's all working",
      "slug": "_14-test-if-it-s-all-working"
    }, {
      "level": 3,
      "title": "15. TLS (optional)",
      "slug": "_15-tls-optional"
    }],
    "excerpt": "<p>I will show how to host your own email domain (or domains) for free!</p>\n<p>Yeah, you can have your own <code>pam@domain.com</code> instead of <code>pam1985b@gmail.com</code>, which is more professional, and for free.</p>\n",
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.36,
      "time": 201600,
      "words": 672
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Rails and AngularJS: Authentication with Devise",
    "frontmatter": {
      "title": "Rails and AngularJS: Authentication with Devise",
      "date": "2015-10-11T00:00:00.000Z",
      "tags": ["Rails", "Ruby", "AngularJS", "JS", "Gem"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-10-11-rails-angular-authentication/",
    "relativePath": "_posts/2015-10-11-rails-angular-authentication/README.md",
    "key": "v-06511e74",
    "path": "/2015/10/rails-angular-authentication/",
    "headers": [{
      "level": 2,
      "title": "Before starting",
      "slug": "before-starting"
    }, {
      "level": 2,
      "title": "1. Install rack-cors gem",
      "slug": "_1-install-rack-cors-gem"
    }, {
      "level": 2,
      "title": "2. Allow AngularJS to access Rails",
      "slug": "_2-allow-angularjs-to-access-rails"
    }, {
      "level": 3,
      "title": "2.1. If Rails --api, enable Sessions",
      "slug": "_2-1-if-rails-api-enable-sessions"
    }, {
      "level": 2,
      "title": "3. Install angular_devise on the AngularJS",
      "slug": "_3-install-angular-devise-on-the-angularjs"
    }, {
      "level": 2,
      "title": "4. Configure AngularJS",
      "slug": "_4-configure-angularjs"
    }, {
      "level": 3,
      "title": "Add Devise module to the app",
      "slug": "add-devise-module-to-the-app"
    }, {
      "level": 3,
      "title": "Set $http to always provide credentials",
      "slug": "set-http-to-always-provide-credentials"
    }, {
      "level": 3,
      "title": "Set Rails API URLs (change api_url to your actual API location)",
      "slug": "set-rails-api-urls-change-api-url-to-your-actual-api-location"
    }, {
      "level": 2,
      "title": "5. Remove the CSRF protection from Rails (I know, I know...)",
      "slug": "_5-remove-the-csrf-protection-from-rails-i-know-i-know"
    }, {
      "level": 2,
      "title": "6. After a refresh, get the session back",
      "slug": "_6-after-a-refresh-get-the-session-back"
    }, {
      "level": 2,
      "title": "7. That's all! :)",
      "slug": "_7-that-s-all"
    }],
    "excerpt": "<p>Let's see how to use Devise authentication on AngularJS.</p>\n",
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.785,
      "time": 227100.00000000003,
      "words": 757
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Ruby to EXE – Turn ruby scripts into portable executable apps",
    "frontmatter": {
      "title": "Ruby to EXE – Turn ruby scripts into portable executable apps",
      "date": "2016-08-21T00:00:00.000Z",
      "tags": ["Ruby", "Tools"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2016-08-21-ruby-to-portable-exe-app/",
    "relativePath": "_posts/2016-08-21-ruby-to-portable-exe-app/README.md",
    "key": "v-214cb7b4",
    "path": "/2016/08/ruby-to-portable-exe-app/",
    "headers": [{
      "level": 2,
      "title": "This method works with",
      "slug": "this-method-works-with"
    }, {
      "level": 2,
      "title": "UPDATE",
      "slug": "update"
    }, {
      "level": 3,
      "title": "Usage",
      "slug": "usage"
    }, {
      "level": 2,
      "title": "How this works, step-by-step",
      "slug": "how-this-works-step-by-step"
    }, {
      "level": 3,
      "title": "First, let's create a Hello World app",
      "slug": "first-let-s-create-a-hello-world-app"
    }, {
      "level": 2,
      "title": "Part I: Standalone Ruby",
      "slug": "part-i-standalone-ruby"
    }, {
      "level": 3,
      "title": "Your ruby version should be 2.2.2, 64 bits",
      "slug": "your-ruby-version-should-be-2-2-2-64-bits"
    }, {
      "level": 3,
      "title": "Duplicate the project folder, naming it as \"app\"",
      "slug": "duplicate-the-project-folder-naming-it-as-app"
    }, {
      "level": 3,
      "title": "In the project folder, create a .package/payload/lib/ruby sub-folder",
      "slug": "in-the-project-folder-create-a-package-payload-lib-ruby-sub-folder"
    }, {
      "level": 3,
      "title": "Move the \"app\" folder to .package/payload/lib",
      "slug": "move-the-app-folder-to-package-payload-lib"
    }, {
      "level": 3,
      "title": "Download ruby traveler 2.2.2 64 bits (5.6M), and unzip it on .package/payload/lib/ruby",
      "slug": "download-ruby-traveler-2-2-2-64-bits-5-6m-and-unzip-it-on-package-payload-lib-ruby"
    }, {
      "level": 3,
      "title": "Go back to .package/payload/",
      "slug": "go-back-to-package-payload"
    }, {
      "level": 3,
      "title": "Create a wrapper script (name it as installer.sh)",
      "slug": "create-a-wrapper-script-name-it-as-installer-sh"
    }, {
      "level": 2,
      "title": "Part II: Gemfile",
      "slug": "part-ii-gemfile"
    }, {
      "level": 3,
      "title": "Create a tmp folder on .package/payload/lib",
      "slug": "create-a-tmp-folder-on-package-payload-lib"
    }, {
      "level": 3,
      "title": "Copy the Gemfile to tmp",
      "slug": "copy-the-gemfile-to-tmp"
    }, {
      "level": 3,
      "title": "Download gems into the lib/vendor folder",
      "slug": "download-gems-into-the-lib-vendor-folder"
    }, {
      "level": 3,
      "title": "Delete tmp folder",
      "slug": "delete-tmp-folder"
    }, {
      "level": 3,
      "title": "[Optional] Delete gem's cache in the vendor folder",
      "slug": "optional-delete-gem-s-cache-in-the-vendor-folder"
    }, {
      "level": 3,
      "title": "Copy the Gemfile to the vendor folder",
      "slug": "copy-the-gemfile-to-the-vendor-folder"
    }, {
      "level": 3,
      "title": "Create a bundler config",
      "slug": "create-a-bundler-config"
    }, {
      "level": 2,
      "title": "Part III: Pack everything as a single self-extract file",
      "slug": "part-iii-pack-everything-as-a-single-self-extract-file"
    }, {
      "level": 3,
      "title": "Create a script to decompress everything",
      "slug": "create-a-script-to-decompress-everything"
    }, {
      "level": 3,
      "title": "Package builder",
      "slug": "package-builder"
    }],
    "excerpt": "<p>Let's see how to compile ruby scripts into standalone binaries.</p>\n",
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.295,
      "time": 257700,
      "words": 859
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "JS2015 on web pages with Babel (in 5 steps)",
    "frontmatter": {
      "title": "JS2015 on web pages with Babel (in 5 steps)",
      "date": "2016-12-31T00:00:00.000Z",
      "tags": ["JS", "Tools"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2016-12-31-js2015-webpages-babel/",
    "relativePath": "_posts/2016-12-31-js2015-webpages-babel/README.md",
    "key": "v-1d66430c",
    "path": "/2016/12/js2015-webpages-babel/",
    "headers": [{
      "level": 2,
      "title": "A simple ES6 example",
      "slug": "a-simple-es6-example"
    }, {
      "level": 2,
      "title": "1. Check if npm is installed",
      "slug": "_1-check-if-npm-is-installed"
    }, {
      "level": 2,
      "title": "2. Install Babel modules",
      "slug": "_2-install-babel-modules"
    }, {
      "level": 2,
      "title": "3. Transpile to ES2016",
      "slug": "_3-transpile-to-es2016"
    }, {
      "level": 3,
      "title": "Wrong",
      "slug": "wrong"
    }, {
      "level": 3,
      "title": "Correct",
      "slug": "correct"
    }, {
      "level": 2,
      "title": "4. Use the transpiled file, not the ES6 files",
      "slug": "_4-use-the-transpiled-file-not-the-es6-files"
    }, {
      "level": 2,
      "title": "5. Repeat step 3 whenever you change the JS files",
      "slug": "_5-repeat-step-3-whenever-you-change-the-js-files"
    }, {
      "level": 2,
      "title": "6. Done!",
      "slug": "_6-done"
    }, {
      "level": 2,
      "title": "Using it with React",
      "slug": "using-it-with-react"
    }, {
      "level": 3,
      "title": "1. Install ReactJS (if you haven't yet)",
      "slug": "_1-install-reactjs-if-you-haven-t-yet"
    }, {
      "level": 3,
      "title": "2. Install ReactJS module",
      "slug": "_2-install-reactjs-module"
    }, {
      "level": 3,
      "title": "3. Transpile it with ReactJS module set",
      "slug": "_3-transpile-it-with-reactjs-module-set"
    }, {
      "level": 2,
      "title": "Common problems",
      "slug": "common-problems"
    }],
    "excerpt": "<p>Let's use Babel and Browserfy to run ES6 code on old unsupported browsers.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.31,
      "time": 138600,
      "words": 462
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Create a Filesystem with Ruby and FUSE",
    "frontmatter": {
      "title": "Create a Filesystem with Ruby and FUSE",
      "date": "2017-04-18T00:00:00.000Z",
      "tags": ["Ruby", "FUSE"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2017-04-18-file-systems-ruby-fuse/",
    "relativePath": "_posts/2017-04-18-file-systems-ruby-fuse/README.md",
    "key": "v-c6d08334",
    "path": "/2017/04/file-systems-ruby-fuse/",
    "headers": [{
      "level": 2,
      "title": "Commands",
      "slug": "commands"
    }, {
      "level": 2,
      "title": "Basic code",
      "slug": "basic-code"
    }, {
      "level": 2,
      "title": "Binary files",
      "slug": "binary-files"
    }, {
      "level": 2,
      "title": "Size / Time",
      "slug": "size-time"
    }, {
      "level": 2,
      "title": "RAW",
      "slug": "raw"
    }, {
      "level": 2,
      "title": "Compiling",
      "slug": "compiling"
    }, {
      "level": 2,
      "title": "On boot (fstab)",
      "slug": "on-boot-fstab"
    }, {
      "level": 2,
      "title": "Links",
      "slug": "links"
    }],
    "excerpt": "<p>Let's see how to create a file system (CowFS) with Ruby and FUSE in simple steps.</p>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.57,
      "time": 94200,
      "words": 314
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Joomla and Memcache (with UNIX sockets)",
    "frontmatter": {
      "title": "Joomla and Memcache (with UNIX sockets)",
      "date": "2019-04-20T00:00:00.000Z",
      "tags": ["Joomla", "PHP", "Linux", "Memcache"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-04-20-joomla-and-memcache-with-unix-sockets/",
    "relativePath": "_posts/2019-04-20-joomla-and-memcache-with-unix-sockets/README.md",
    "key": "v-8d44ed04",
    "path": "/2019/04/joomla-and-memcache-with-unix-sockets/",
    "headers": [{
      "level": 2,
      "title": "Memcache or Memcached?",
      "slug": "memcache-or-memcached"
    }, {
      "level": 2,
      "title": "1. Installation",
      "slug": "_1-installation"
    }, {
      "level": 3,
      "title": "Install server and its PHP module",
      "slug": "install-server-and-its-php-module"
    }, {
      "level": 3,
      "title": "To test it, create a phpinfo.php file in the Joomla root folder",
      "slug": "to-test-it-create-a-phpinfo-php-file-in-the-joomla-root-folder"
    }, {
      "level": 3,
      "title": "Open the page in your browser",
      "slug": "open-the-page-in-your-browser"
    }, {
      "level": 3,
      "title": "Look for a memcached reference",
      "slug": "look-for-a-memcached-reference"
    }, {
      "level": 2,
      "title": "2. Add memcache user to www-data group",
      "slug": "_2-add-memcache-user-to-www-data-group"
    }, {
      "level": 2,
      "title": "3. Enable UNIX sockets",
      "slug": "_3-enable-unix-sockets"
    }, {
      "level": 2,
      "title": "4. Disable TCP (optional)",
      "slug": "_4-disable-tcp-optional"
    }, {
      "level": 2,
      "title": "5. Restart service",
      "slug": "_5-restart-service"
    }, {
      "level": 2,
      "title": "6. Configure Joomla",
      "slug": "_6-configure-joomla"
    }, {
      "level": 2,
      "title": "7. Avoid session issues by changing your public $secret",
      "slug": "_7-avoid-session-issues-by-changing-your-public-secret"
    }, {
      "level": 2,
      "title": "8. Sessions with Memcached",
      "slug": "_8-sessions-with-memcached"
    }, {
      "level": 2,
      "title": "TROUBLESHOOTING",
      "slug": "troubleshooting"
    }],
    "excerpt": "<p>Let's see how to use Memcache to improve the performance of your Joomla installation.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.605,
      "time": 156300,
      "words": 521
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Debug on Atom with PHP XDebug",
    "frontmatter": {
      "title": "Debug on Atom with PHP XDebug",
      "date": "2019-06-05T00:00:00.000Z",
      "tags": ["PHP", "Tools", "Atom", "Debug"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-05-atom-php-debugger/",
    "relativePath": "_posts/2019-06-05-atom-php-debugger/README.md",
    "key": "v-835cd42c",
    "path": "/2019/06/atom-php-debugger/",
    "headers": [{
      "level": 2,
      "title": "1. Install xdebug",
      "slug": "_1-install-xdebug"
    }, {
      "level": 2,
      "title": "2. Check installation",
      "slug": "_2-check-installation"
    }, {
      "level": 2,
      "title": "3. Add these lines to xdebug.ini",
      "slug": "_3-add-these-lines-to-xdebug-ini"
    }, {
      "level": 2,
      "title": "4. Install php-debug plugin on Atom",
      "slug": "_4-install-php-debug-plugin-on-atom"
    }, {
      "level": 2,
      "title": "5. Re-start Atom editor",
      "slug": "_5-re-start-atom-editor"
    }, {
      "level": 2,
      "title": "6. To add breakpoints, click on the marker ruler",
      "slug": "_6-to-add-breakpoints-click-on-the-marker-ruler"
    }, {
      "level": 2,
      "title": "TROUBLESHOOTING",
      "slug": "troubleshooting"
    }],
    "excerpt": "<p>This tutorial shows how to debug PHP on Atom Editor.</p>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.89,
      "time": 113399.99999999999,
      "words": 378
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Clean your code in Atom with PHPCS (Ubuntu)",
    "frontmatter": {
      "title": "Clean your code in Atom with PHPCS (Ubuntu)",
      "date": "2019-06-05T00:00:00.000Z",
      "tags": ["PHP", "Tools", "Atom"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-05-atom-phpcs-ubuntu/",
    "relativePath": "_posts/2019-06-05-atom-phpcs-ubuntu/README.md",
    "key": "v-095cbabe",
    "path": "/2019/06/atom-phpcs-ubuntu/",
    "headers": [{
      "level": 2,
      "title": "1. Install PHPCS",
      "slug": "_1-install-phpcs"
    }, {
      "level": 3,
      "title": "Restart your profile",
      "slug": "restart-your-profile"
    }, {
      "level": 2,
      "title": "2. Check installed coding styles",
      "slug": "_2-check-installed-coding-styles"
    }, {
      "level": 2,
      "title": "3. Install phpcodesniffer-composer-installer",
      "slug": "_3-install-phpcodesniffer-composer-installer"
    }, {
      "level": 2,
      "title": "4. [OPTIONAL] Install extra coding styles system-wide: WordPress, Joomla, etc",
      "slug": "_4-optional-install-extra-coding-styles-system-wide-wordpress-joomla-etc"
    }, {
      "level": 3,
      "title": "WordPress",
      "slug": "wordpress"
    }, {
      "level": 3,
      "title": "WordPress VIP",
      "slug": "wordpress-vip"
    }, {
      "level": 3,
      "title": "Joomla",
      "slug": "joomla"
    }, {
      "level": 2,
      "title": "Check installed rules",
      "slug": "check-installed-rules"
    }, {
      "level": 2,
      "title": "4. Get the bin path",
      "slug": "_4-get-the-bin-path"
    }, {
      "level": 2,
      "title": "5. In Atom, install linter and linter-php packages",
      "slug": "_5-in-atom-install-linter-and-linter-php-packages"
    }, {
      "level": 2,
      "title": "6. In Atom, install linter-phpcs package",
      "slug": "_6-in-atom-install-linter-phpcs-package"
    }],
    "excerpt": "<p><strong>PHP Code Sniffer</strong> (aka <strong>PHPCS</strong>) is, for me, the most essential tool for professional PHP development.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.86,
      "time": 171600,
      "words": 572
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "NGINX with multiple users",
    "frontmatter": {
      "title": "NGINX with multiple users",
      "date": "2019-06-05T00:00:00.000Z",
      "tags": ["Nginx", "Linux", "Web-server", "Security"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-05-user-per-virtual-host-nginx/",
    "relativePath": "_posts/2019-06-05-user-per-virtual-host-nginx/README.md",
    "key": "v-60dbf1fc",
    "path": "/2019/06/user-per-virtual-host-nginx/",
    "headers": [{
      "level": 2,
      "title": "1. Create spools",
      "slug": "_1-create-spools"
    }, {
      "level": 3,
      "title": "Spool #1 (myuser1/mygroup1)",
      "slug": "spool-1-myuser1-mygroup1"
    }, {
      "level": 3,
      "title": "Spool #2 (myuser2/mygroup2)",
      "slug": "spool-2-myuser2-mygroup2"
    }, {
      "level": 2,
      "title": "2. Assign each spool to its server block",
      "slug": "_2-assign-each-spool-to-its-server-block"
    }, {
      "level": 3,
      "title": "Host 1",
      "slug": "host-1"
    }, {
      "level": 3,
      "title": "Host 2",
      "slug": "host-2"
    }, {
      "level": 2,
      "title": "3. Restart FPM and NGINX services",
      "slug": "_3-restart-fpm-and-nginx-services"
    }, {
      "level": 2,
      "title": "4. Testing",
      "slug": "_4-testing"
    }, {
      "level": 2,
      "title": "Why to use multiple users (security reasons)",
      "slug": "why-to-use-multiple-users-security-reasons"
    }],
    "excerpt": "<p>For security reasons, you shouldn't run all your NGINX virtual hosts with the same user.</p>\n<div class=\"custom-block tip\"><p class=\"custom-block-title\">TIP</p>\n<p>See <strong>why</strong> it's a bad practice to run all sites on the same user at the <a href=\"#why-to-use-multiple-users-security-reasons\">end of this article</a>.</p>\n</div>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.97,
      "time": 118200,
      "words": 394
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "PrismJS (syntax highlighter) with WordPress",
    "frontmatter": {
      "title": "PrismJS (syntax highlighter) with WordPress",
      "date": "2019-06-06T00:00:00.000Z",
      "tags": ["WordPress", "PHP", "Prism"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-06-prism-js-with-wordpress/",
    "relativePath": "_posts/2019-06-06-prism-js-with-wordpress/README.md",
    "key": "v-4012f8f8",
    "path": "/2019/06/prism-js-with-wordpress/",
    "headers": [{
      "level": 2,
      "title": "1. Download PrismJS",
      "slug": "_1-download-prismjs"
    }, {
      "level": 2,
      "title": "2. Move files to your theme folder",
      "slug": "_2-move-files-to-your-theme-folder"
    }, {
      "level": 2,
      "title": "3. Edit your theme functions.php",
      "slug": "_3-edit-your-theme-functions-php"
    }, {
      "level": 2,
      "title": "Usage - Gutemberg Editor (WordPress 5+)",
      "slug": "usage-gutemberg-editor-wordpress-5"
    }, {
      "level": 2,
      "title": "Usage - Classic Editor (WordPress 4-)",
      "slug": "usage-classic-editor-wordpress-4"
    }, {
      "level": 2,
      "title": "EXTRA: Downloading Prism.js/css",
      "slug": "extra-downloading-prism-js-css"
    }],
    "excerpt": "<p>This blog runs on Prism JS to prettify the code blocks. Here I show a quick, 5-minute, simple way to add it on your own WordPress blog. <strong>No plugin required!</strong></p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.065,
      "time": 123899.99999999999,
      "words": 413
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Facebook sign-up button with JS and PHP (tutorial)",
    "frontmatter": {
      "title": "Facebook sign-up button with JS and PHP (tutorial)",
      "date": "2019-06-13T00:00:00.000Z",
      "tags": ["Facebook SDK", "PHP", "JS"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-13-facebook-sign-up-button-with-js-and-php-tutorial/",
    "relativePath": "_posts/2019-06-13-facebook-sign-up-button-with-js-and-php-tutorial/README.md",
    "key": "v-a8f09df4",
    "path": "/2019/06/facebook-sign-up-button-with-js-and-php-tutorial/",
    "headers": [{
      "level": 2,
      "title": "JS vs PHP rendering",
      "slug": "js-vs-php-rendering"
    }, {
      "level": 2,
      "title": "0. Create an app on FB’s developer",
      "slug": "_0-create-an-app-on-fb-s-developer"
    }, {
      "level": 3,
      "title": "Go to",
      "slug": "go-to"
    }, {
      "level": 3,
      "title": "Create an app",
      "slug": "create-an-app"
    }, {
      "level": 3,
      "title": "Get the ID and SECRET",
      "slug": "get-the-id-and-secret"
    }, {
      "level": 2,
      "title": "1. Install PHP SDK on your project folder",
      "slug": "_1-install-php-sdk-on-your-project-folder"
    }, {
      "level": 2,
      "title": "2. The code",
      "slug": "_2-the-code"
    }, {
      "level": 2,
      "title": "Publishing",
      "slug": "publishing"
    }],
    "excerpt": "<p>This tutorial shows how to implement a &quot;Continue with Facebook&quot; button using JS and PHP.</p>\n",
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.515,
      "time": 210900,
      "words": 703
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Facebook sign-up button with PHP (tutorial)",
    "frontmatter": {
      "title": "Facebook sign-up button with PHP (tutorial)",
      "date": "2019-06-13T00:00:00.000Z",
      "tags": ["Facebook SDK", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-13-facebook-sign-up-button-with-php-tutorial/",
    "relativePath": "_posts/2019-06-13-facebook-sign-up-button-with-php-tutorial/README.md",
    "key": "v-361d79f8",
    "path": "/2019/06/facebook-sign-up-button-with-php-tutorial/",
    "headers": [{
      "level": 2,
      "title": "JS vs PHP rendering",
      "slug": "js-vs-php-rendering"
    }, {
      "level": 2,
      "title": "0. Create an app on FB’s developer",
      "slug": "_0-create-an-app-on-fb-s-developer"
    }, {
      "level": 3,
      "title": "Go to",
      "slug": "go-to"
    }, {
      "level": 3,
      "title": "Create an app",
      "slug": "create-an-app"
    }, {
      "level": 3,
      "title": "Get the ID and SECRET",
      "slug": "get-the-id-and-secret"
    }, {
      "level": 2,
      "title": "1. Install PHP SDK on your project folder",
      "slug": "_1-install-php-sdk-on-your-project-folder"
    }, {
      "level": 2,
      "title": "2. The code",
      "slug": "_2-the-code"
    }, {
      "level": 2,
      "title": "Publishing",
      "slug": "publishing"
    }],
    "excerpt": "<p>This tutorial shows how to implement a &quot;Continue with Facebook&quot; button with just PHP. No JS required.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.125,
      "time": 127500,
      "words": 425
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "WordPress with SQLite",
    "frontmatter": {
      "title": "WordPress with SQLite",
      "date": "2019-06-16T00:00:00.000Z",
      "tags": ["WordPress", "PHP", "SQLite"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-16-wordpress-with-sqlite/",
    "relativePath": "_posts/2019-06-16-wordpress-with-sqlite/README.md",
    "key": "v-6da3a6e0",
    "path": "/2019/06/wordpress-with-sqlite/",
    "headers": [{
      "level": 2,
      "title": "This tutorial on video (3 min, no sound)",
      "slug": "this-tutorial-on-video-3-min-no-sound"
    }, {
      "level": 2,
      "title": "Step by Step",
      "slug": "step-by-step"
    }, {
      "level": 3,
      "title": "1. Download WordPress](https://wordpress.org/download/) and [SQLite Integration Plugin",
      "slug": "_1-download-wordpress-and-sqlite-integration-plugin"
    }, {
      "level": 3,
      "title": "2. Extract files",
      "slug": "_2-extract-files"
    }, {
      "level": 3,
      "title": "3. Remove zip files (optional, for cleanup)",
      "slug": "_3-remove-zip-files-optional-for-cleanup"
    }, {
      "level": 3,
      "title": "4. Move plugin to wp-content/plugins",
      "slug": "_4-move-plugin-to-wp-content-plugins"
    }, {
      "level": 3,
      "title": "5. Move db.php to wp-content",
      "slug": "_5-move-db-php-to-wp-content"
    }, {
      "level": 3,
      "title": "6. Transform wp-config-sample.php into wp-config.php",
      "slug": "_6-transform-wp-config-sample-php-into-wp-config-php"
    }, {
      "level": 3,
      "title": "7. Run the WP installer as usual",
      "slug": "_7-run-the-wp-installer-as-usual"
    }, {
      "level": 2,
      "title": "Troubleshooting",
      "slug": "troubleshooting"
    }, {
      "level": 2,
      "title": "Migrating an existing website",
      "slug": "migrating-an-existing-website"
    }],
    "excerpt": "<p>Oficially, WordPress only supports MySQL, but with this plugin created by kjmtsh you can use SQLite instead.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.065,
      "time": 123899.99999999999,
      "words": 413
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Writing a Gmail client on PHP (POP3 and IMAP)",
    "frontmatter": {
      "title": "Writing a Gmail client on PHP (POP3 and IMAP)",
      "date": "2019-07-17T00:00:00.000Z",
      "tags": ["PHP", "POP3"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-07-17-gmail-client-php-pop3-imap/",
    "relativePath": "_posts/2019-07-17-gmail-client-php-pop3-imap/README.md",
    "key": "v-ef6eb9b4",
    "path": "/2019/07/gmail-client-php-pop3-imap/",
    "headers": [{
      "level": 2,
      "title": "Basic code",
      "slug": "basic-code"
    }, {
      "level": 2,
      "title": "Return Example",
      "slug": "return-example"
    }, {
      "level": 2,
      "title": "POP3",
      "slug": "pop3"
    }, {
      "level": 3,
      "title": "Credentials",
      "slug": "credentials"
    }, {
      "level": 3,
      "title": "msgno",
      "slug": "msgno"
    }, {
      "level": 2,
      "title": "Troubleshooting",
      "slug": "troubleshooting"
    }, {
      "level": 2,
      "title": "Retrieving emails",
      "slug": "retrieving-emails"
    }, {
      "level": 2,
      "title": "Display Name (From/To)",
      "slug": "display-name-from-to"
    }, {
      "level": 2,
      "title": "Closing the connection",
      "slug": "closing-the-connection"
    }, {
      "level": 2,
      "title": "Errors",
      "slug": "errors"
    }, {
      "level": 2,
      "title": "Replying to an email",
      "slug": "replying-to-an-email"
    }, {
      "level": 2,
      "title": "Example of a replied message",
      "slug": "example-of-a-replied-message"
    }, {
      "level": 2,
      "title": "Which email address you should reply to?",
      "slug": "which-email-address-you-should-reply-to"
    }],
    "excerpt": "<p>Let's create a Gmail email client using PHP's native IMAP library.</p>\n",
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.545,
      "time": 272700,
      "words": 909
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Avoid messy coding with PHPMD (Atom + Ubuntu)",
    "frontmatter": {
      "title": "Avoid messy coding with PHPMD (Atom + Ubuntu)",
      "date": "2019-07-18T00:00:00.000Z",
      "tags": ["PHP", "Tools", "Atom"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-07-18-phpmd-atom/",
    "relativePath": "_posts/2019-07-18-phpmd-atom/README.md",
    "key": "v-fa02fbb4",
    "path": "/2019/07/phpmd-atom/",
    "headers": [{
      "level": 2,
      "title": "1. Install PHPMD (PHP Mess Detector)",
      "slug": "_1-install-phpmd-php-mess-detector"
    }, {
      "level": 2,
      "title": "2. On Atom, install linter-phpmd package",
      "slug": "_2-on-atom-install-linter-phpmd-package"
    }, {
      "level": 2,
      "title": "3. Set a configuration file for your project",
      "slug": "_3-set-a-configuration-file-for-your-project"
    }, {
      "level": 3,
      "title": "Disable the controversial rules!",
      "slug": "disable-the-controversial-rules"
    }, {
      "level": 2,
      "title": "Suppressing specific warnings",
      "slug": "suppressing-specific-warnings"
    }, {
      "level": 2,
      "title": "Suppressing warnings for the whole project",
      "slug": "suppressing-warnings-for-the-whole-project"
    }, {
      "level": 3,
      "title": "1. Exceptions",
      "slug": "_1-exceptions"
    }, {
      "level": 3,
      "title": "2. Removing a rule",
      "slug": "_2-removing-a-rule"
    }, {
      "level": 3,
      "title": "3. Removing an entire ruleset",
      "slug": "_3-removing-an-entire-ruleset"
    }],
    "excerpt": "<p><strong>PHP Mess Detector</strong> aka <a href=\"https://phpmd.org/\" target=\"_blank\" rel=\"noopener noreferrer\">PHPMD<OutboundLink/></a> is a tool to help you write cleaner code. It warns you about overcomplicated code, Spaghetti code, unused code, bugs, and more.</p>\n",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.66,
      "time": 159600.00000000003,
      "words": 532
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "WordPress: Custom admin email for new user registration",
    "frontmatter": {
      "title": "WordPress: Custom admin email for new user registration",
      "date": "2019-07-27T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-07-27-wordpress-change-new-user-registration-admin-notification/",
    "relativePath": "_posts/2019-07-27-wordpress-change-new-user-registration-admin-notification/README.md",
    "key": "v-4e0f44ee",
    "path": "/2019/07/wordpress-change-new-user-registration-admin-notification/",
    "headers": [{
      "level": 2,
      "title": "WordPress 4.8 and before",
      "slug": "wordpress-4-8-and-before"
    }, {
      "level": 2,
      "title": "WP_REST_User plugin",
      "slug": "wp-rest-user-plugin"
    }],
    "excerpt": "<p>When a new user signs up to your WordPress site, an email notification is sent to the “admin address” specified on <code>Settings &gt; General &gt; Email Address</code>:</p>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.79,
      "time": 107400,
      "words": 358
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Install Wine Staging on Ubuntu 19.04",
    "frontmatter": {
      "title": "Install Wine Staging on Ubuntu 19.04",
      "date": "2019-07-28T00:00:00.000Z",
      "tags": ["Wine", "Linux"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-07-28-install-wine-staging-ubuntu-19-04/",
    "relativePath": "_posts/2019-07-28-install-wine-staging-ubuntu-19-04/README.md",
    "key": "v-79c5c9c0",
    "path": "/2019/07/install-wine-staging-ubuntu-19-04/",
    "excerpt": "<p>This tutorial on video (1 min, no sound):</p>\n",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.37,
      "time": 22200,
      "words": 74
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "WordPress: Quickly Log out all users [Quick Tip]",
    "frontmatter": {
      "title": "WordPress: Quickly Log out all users [Quick Tip]",
      "date": "2019-08-02T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-08-02-wordpress-log-out-all-users/",
    "relativePath": "_posts/2019-08-02-wordpress-log-out-all-users/README.md",
    "key": "v-94a6d350",
    "path": "/2019/08/wordpress-log-out-all-users/",
    "headers": [{
      "level": 2,
      "title": "This tutorial on video (29 seconds, no sound)",
      "slug": "this-tutorial-on-video-29-seconds-no-sound"
    }, {
      "level": 2,
      "title": "1. Open wp-config.php and look for the AUTH_KEY section",
      "slug": "_1-open-wp-config-php-and-look-for-the-auth-key-section"
    }, {
      "level": 2,
      "title": "2. Get new session tokens (from the official WP page)",
      "slug": "_2-get-new-session-tokens-from-the-official-wp-page"
    }, {
      "level": 2,
      "title": "3. Replace the old values on wp-config.php",
      "slug": "_3-replace-the-old-values-on-wp-config-php"
    }, {
      "level": 2,
      "title": "4. Save the file and that’s all!",
      "slug": "_4-save-the-file-and-that-s-all"
    }],
    "excerpt": "<p>Want to kill all sessions instantly? Force all users to log out? Have no time? Do this.</p>\n",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.79,
      "time": 47400.00000000001,
      "words": 158
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Adding icons to GravityForm steps",
    "frontmatter": {
      "title": "Adding icons to GravityForm steps",
      "date": "2019-08-28T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-08-28-adding-icons-to-gravityform-steps/",
    "relativePath": "_posts/2019-08-28-adding-icons-to-gravityform-steps/README.md",
    "key": "v-570ccf44",
    "path": "/2019/08/adding-icons-to-gravityform-steps/",
    "headers": [{
      "level": 2,
      "title": "Setting icon images",
      "slug": "setting-icon-images"
    }],
    "excerpt": "<p>Let’s say you want to have icons on your steps:</p>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.08,
      "time": 64800.000000000015,
      "words": 216
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "[SOLVED] Notifications doesn’t work when submitting a form on GravityForm API",
    "frontmatter": {
      "title": "[SOLVED] Notifications doesn’t work when submitting a form on GravityForm API",
      "date": "2019-09-06T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-09-06-resolved-notifications-doesnt-work-when-submitting-a-form-on-gravityform-api/",
    "relativePath": "_posts/2019-09-06-resolved-notifications-doesnt-work-when-submitting-a-form-on-gravityform-api/README.md",
    "key": "v-24176366",
    "path": "/2019/09/resolved-notifications-doesnt-work-when-submitting-a-form-on-gravityform-api/",
    "excerpt": "<p>By default, notifications only work when submitting through the web interface. If you are submitting forms using the REST API, notifications will be ignored.</p>\n",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.445,
      "time": 26700,
      "words": 89
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Gravity Forms: Populate State from a ZIP Code",
    "frontmatter": {
      "title": "Gravity Forms: Populate State from a ZIP Code",
      "date": "2019-09-16T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-09-16-gravity-forms-populate-state-from-a-zip-code/",
    "relativePath": "_posts/2019-09-16-gravity-forms-populate-state-from-a-zip-code/README.md",
    "key": "v-0fea6874",
    "path": "/2019/09/gravity-forms-populate-state-from-a-zip-code/",
    "headers": [{
      "level": 2,
      "title": "1. ZIP field",
      "slug": "_1-zip-field"
    }, {
      "level": 2,
      "title": "2. Hidden “State” field",
      "slug": "_2-hidden-state-field"
    }, {
      "level": 2,
      "title": "3. Take note of 3 IDs: FormID, ZipID, StateID",
      "slug": "_3-take-note-of-3-ids-formid-zipid-stateid"
    }, {
      "level": 2,
      "title": "4. Add to your theme’s functions.php",
      "slug": "_4-add-to-your-theme-s-functions-php"
    }],
    "excerpt": "<p>Let’s say you want to populate a state from a ZIP Code (without asking the user to fill it).</p>\n",
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.9,
      "time": 354000,
      "words": 1180
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "WordPress: Show the current year on the footer",
    "frontmatter": {
      "title": "WordPress: Show the current year on the footer",
      "date": "2020-01-16T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-09-20-creating-shortcodes-on-wordpress/",
    "relativePath": "_posts/2019-09-20-creating-shortcodes-on-wordpress/README.md",
    "key": "v-9d2e4b34",
    "path": "/2020/01/creating-shortcodes-on-wordpress/",
    "headers": [{
      "level": 2,
      "title": "Alternative: Using JS",
      "slug": "alternative-using-js"
    }, {
      "level": 2,
      "title": "An over-engineered solution: Shortcode with a JS callback",
      "slug": "an-over-engineered-solution-shortcode-with-a-js-callback"
    }],
    "excerpt": "<p>Let's create a shortcode to show the current year.</p>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.875,
      "time": 112500,
      "words": 375
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Creating Shortcodes on WordPress",
    "frontmatter": {
      "title": "Creating Shortcodes on WordPress",
      "date": "2019-09-20T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2020-01-16-wordpress-show-the-current-year-on-the-footer/",
    "relativePath": "_posts/2020-01-16-wordpress-show-the-current-year-on-the-footer/README.md",
    "key": "v-beeb9054",
    "path": "/2019/09/wordpress-show-the-current-year-on-the-footer/",
    "headers": [{
      "level": 2,
      "title": "1. Self-closing tag: [hello]",
      "slug": "_1-self-closing-tag-hello"
    }, {
      "level": 2,
      "title": "2. Tag with attributes: [hello color=\"blue\"]",
      "slug": "_2-tag-with-attributes-hello-color-blue"
    }, {
      "level": 3,
      "title": "Security – Always escape vars when printing: esc_attr(...)",
      "slug": "security-always-escape-vars-when-printing-esc-attr"
    }, {
      "level": 2,
      "title": "3. Enclosed Content tag: [hello]World[/hello]",
      "slug": "_3-enclosed-content-tag-hello-world-hello"
    }, {
      "level": 2,
      "title": "4. Many tags, one callback",
      "slug": "_4-many-tags-one-callback"
    }],
    "excerpt": "<p>A shortcode is a string that will be replaced by dynamic content.</p>\n",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.48,
      "time": 88800,
      "words": 296
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Convert WordPress readme.txt to MarkDown automatically",
    "frontmatter": {
      "title": "Convert WordPress `readme.txt` to MarkDown automatically",
      "date": "2020-03-16T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2020-03-16-convert-wordpress-readme-txt-to-markdown-automatically/",
    "relativePath": "_posts/2020-03-16-convert-wordpress-readme-txt-to-markdown-automatically/README.md",
    "key": "v-2c8b8d34",
    "path": "/2020/03/convert-wordpress-readme-txt-to-markdown-automatically/",
    "headers": [{
      "level": 2,
      "title": "Using it",
      "slug": "using-it"
    }],
    "excerpt": "<p>If you have a WordPress plugin hosted on GitHub, you know how bad the readme page looks on GitHub by default.</p>\n",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.81,
      "time": 48600,
      "words": 162
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "About me",
    "frontmatter": {
      "readingShow": "top"
    },
    "regularPath": "/about.html",
    "relativePath": "about.md",
    "key": "v-0584dda5",
    "path": "/about.html",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.025,
      "time": 1500,
      "words": 5
    }
  }, {
    "title": "Dragonfly gem: images and files in Rails models (Paperclip alternative)",
    "frontmatter": {
      "title": "Dragonfly gem: images and files in Rails models (Paperclip alternative)",
      "date": "2015-09-27T00:00:00.000Z",
      "tags": ["Rails", "Ruby", "Gem"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2015-09-27-dragonfly-rails-models-with-images-and-files/",
    "relativePath": "_posts/2015-09-27-dragonfly-rails-models-with-images-and-files/README.md",
    "key": "v-26e96034",
    "path": "/2015/09/dragonfly-rails-models-with-images-and-files/",
    "headers": [{
      "level": 2,
      "title": "Before we start",
      "slug": "before-we-start"
    }, {
      "level": 2,
      "title": "Installation",
      "slug": "installation"
    }, {
      "level": 3,
      "title": "1. Declare DragonFly gem on Gemfile",
      "slug": "_1-declare-dragonfly-gem-on-gemfile"
    }, {
      "level": 3,
      "title": "2. Install it",
      "slug": "_2-install-it"
    }, {
      "level": 3,
      "title": "3. Generate the initializer file",
      "slug": "_3-generate-the-initializer-file"
    }, {
      "level": 2,
      "title": "Creating an image field",
      "slug": "creating-an-image-field"
    }, {
      "level": 2,
      "title": "Saving a file to a record",
      "slug": "saving-a-file-to-a-record"
    }, {
      "level": 3,
      "title": "1. For our test, save this image in your Images folder as 1.jpg",
      "slug": "_1-for-our-test-save-this-image-in-your-images-folder-as-1-jpg"
    }, {
      "level": 3,
      "title": "2. Open the rails console",
      "slug": "_2-open-the-rails-console"
    }, {
      "level": 3,
      "title": "3. Load the image file, get a record, put the image on it, and save it",
      "slug": "_3-load-the-image-file-get-a-record-put-the-image-on-it-and-save-it"
    }, {
      "level": 3,
      "title": "4. Close the console and re-open it again to make sure the image has been saved",
      "slug": "_4-close-the-console-and-re-open-it-again-to-make-sure-the-image-has-been-saved"
    }, {
      "level": 2,
      "title": "Retrieving",
      "slug": "retrieving"
    }, {
      "level": 3,
      "title": "1. To get the file path, use the url method",
      "slug": "_1-to-get-the-file-path-use-the-url-method"
    }, {
      "level": 3,
      "title": "2. Copy and paste the result on the browser and you will see the file",
      "slug": "_2-copy-and-paste-the-result-on-the-browser-and-you-will-see-the-file"
    }, {
      "level": 3,
      "title": "3. For images, we can use the thumb method. It generates a new version with different geometries",
      "slug": "_3-for-images-we-can-use-the-thumb-method-it-generates-a-new-version-with-different-geometries"
    }, {
      "level": 3,
      "title": "4. Copy and paste the result on the browser and see the same image with the new dimensions",
      "slug": "_4-copy-and-paste-the-result-on-the-browser-and-see-the-same-image-with-the-new-dimensions"
    }, {
      "level": 2,
      "title": "Dragonfly is on-the-fly",
      "slug": "dragonfly-is-on-the-fly"
    }, {
      "level": 2,
      "title": "Displaying on index.html and show.html",
      "slug": "displaying-on-index-html-and-show-html"
    }, {
      "level": 3,
      "title": "1. Open index.html.erb and create a thumb column",
      "slug": "_1-open-index-html-erb-and-create-a-thumb-column"
    }, {
      "level": 3,
      "title": "2. Do the same for show.html.erb",
      "slug": "_2-do-the-same-for-show-html-erb"
    }, {
      "level": 3,
      "title": "3. Check if the image exists",
      "slug": "_3-check-if-the-image-exists"
    }, {
      "level": 2,
      "title": "Using it on forms",
      "slug": "using-it-on-forms"
    }, {
      "level": 3,
      "title": "1. Open _form.html.erb, create a new HTML field with the corresponding name, and use the file_field method to generate a HTML file field",
      "slug": "_1-open-form-html-erb-create-a-new-html-field-with-the-corresponding-name-and-use-the-file-field-method-to-generate-a-html-file-field"
    }, {
      "level": 3,
      "title": "2. Like other fields, we must allow it in strong parameters",
      "slug": "_2-like-other-fields-we-must-allow-it-in-strong-parameters"
    }, {
      "level": 2,
      "title": "Performance with cache",
      "slug": "performance-with-cache"
    }, {
      "level": 3,
      "title": "1. Add it to Gemfile",
      "slug": "_1-add-it-to-gemfile"
    }, {
      "level": 3,
      "title": "2. Install it",
      "slug": "_2-install-it-2"
    }, {
      "level": 3,
      "title": "3. Enable it on production",
      "slug": "_3-enable-it-on-production"
    }, {
      "level": 3,
      "title": "4. Set the cache's temporary folder",
      "slug": "_4-set-the-cache-s-temporary-folder"
    }, {
      "level": 2,
      "title": "Validation",
      "slug": "validation"
    }, {
      "level": 2,
      "title": "S3, Dropbox, Watermarks and More",
      "slug": "s3-dropbox-watermarks-and-more"
    }, {
      "level": 2,
      "title": "Common problems",
      "slug": "common-problems"
    }, {
      "level": 2,
      "title": "More info",
      "slug": "more-info"
    }],
    "excerpt": "<p>Let's say you want to add a <strong>picture field</strong> to your <strong>product model</strong>. How do you do it?</p>\n<p>Unfortunately, Rails' Active Record doesn't provide a native way to work with binary fields, like pictures. We can easily add a string field, but we can't add a file field.</p>\n",
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.3,
      "time": 378000,
      "words": 1260
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "jQuery Slider: Range, Logarithmic and more",
    "frontmatter": {
      "title": "jQuery Slider: Range, Logarithmic and more",
      "date": "2019-06-11T00:00:00.000Z",
      "tags": ["JS", "jQuery"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-11-jquery-range-slider-logarithmic/",
    "relativePath": "_posts/2019-06-11-jquery-range-slider-logarithmic/README.md",
    "key": "v-04534634",
    "path": "/2019/06/jquery-range-slider-logarithmic/",
    "headers": [{
      "level": 2,
      "title": "Installation",
      "slug": "installation"
    }, {
      "level": 3,
      "title": "You need jQuery and jQuery UI ...",
      "slug": "you-need-jquery-and-jquery-ui"
    }, {
      "level": 3,
      "title": "... and some styling",
      "slug": "and-some-styling"
    }, {
      "level": 2,
      "title": "1. Simple Slider",
      "slug": "_1-simple-slider"
    }, {
      "level": 2,
      "title": "2. Range slider (two handlers: min and max)",
      "slug": "_2-range-slider-two-handlers-min-and-max"
    }, {
      "level": 2,
      "title": "3. Fixed values (ex. [0, 100, 200, 500, 1000, 1500])",
      "slug": "_3-fixed-values-ex-0-100-200-500-1000-1500"
    }, {
      "level": 2,
      "title": "4. Exponential / Logarithmic values (ex. [0, 10, 100, 1000, 1000])",
      "slug": "_4-exponential-logarithmic-values-ex-0-10-100-1000-1000"
    }, {
      "level": 2,
      "title": "5. Formatting values",
      "slug": "_5-formatting-values"
    }, {
      "level": 2,
      "title": "6. \"Any\"",
      "slug": "_6-any"
    }, {
      "level": 2,
      "title": "Basic styling rules for the widget",
      "slug": "basic-styling-rules-for-the-widget"
    }],
    "excerpt": "<p>I will show here how to implement many different slider types using jQuery.</p>\n",
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.44,
      "time": 266400.00000000006,
      "words": 888
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Ajax in WordPress [Plugin Development – Part 3]",
    "frontmatter": {
      "title": "Ajax in WordPress [Plugin Development – Part 3]",
      "date": "2019-07-03T00:00:00.000Z",
      "tags": ["WordPress", "PHP", "WP Plugin Development"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-07-03-wordpress-ajax-rest-api/",
    "relativePath": "_posts/2019-07-03-wordpress-ajax-rest-api/README.md",
    "key": "v-7611a5e0",
    "path": "/2019/07/wordpress-ajax-rest-api/",
    "headers": [{
      "level": 2,
      "title": "1. Ajax API",
      "slug": "_1-ajax-api"
    }, {
      "level": 2,
      "title": "[SECURITY] Check permissions",
      "slug": "security-check-permissions"
    }, {
      "level": 2,
      "title": "[SECURITY] Sanitization",
      "slug": "security-sanitization"
    }, {
      "level": 2,
      "title": "[SECURITY] Nonces – To use them or not?",
      "slug": "security-nonces-to-use-them-or-not"
    }, {
      "level": 2,
      "title": "2. REST API",
      "slug": "_2-rest-api"
    }, {
      "level": 3,
      "title": "2.1. Pretty URLs",
      "slug": "_2-1-pretty-urls"
    }, {
      "level": 3,
      "title": "2.2. RESTful structure",
      "slug": "_2-2-restful-structure"
    }, {
      "level": 2,
      "title": "Defining multiple actions",
      "slug": "defining-multiple-actions"
    }, {
      "level": 3,
      "title": "2.3. Verb Constants",
      "slug": "_2-3-verb-constants"
    }, {
      "level": 3,
      "title": "2.4. Success",
      "slug": "_2-4-success"
    }, {
      "level": 3,
      "title": "2.5. Error",
      "slug": "_2-5-error"
    }, {
      "level": 3,
      "title": "2.6. [SECURITY] Restricting access to the endpoint",
      "slug": "_2-6-security-restricting-access-to-the-endpoint"
    }, {
      "level": 3,
      "title": "2.7. Arguments (parameters)",
      "slug": "_2-7-arguments-parameters"
    }, {
      "level": 3,
      "title": "2.8. [SECURITY] Validation and Sanitization",
      "slug": "_2-8-security-validation-and-sanitization"
    }, {
      "level": 3,
      "title": "2.9. [SECURITY] Nonces",
      "slug": "_2-9-security-nonces"
    }, {
      "level": 2,
      "title": "3. WP_REST_Controller",
      "slug": "_3-wp-rest-controller"
    }],
    "excerpt": "<p>This is the 3rd part of my WordPress Plugin Development tutorial. Check also the <RouterLink to=\"/2019/06/wordpress-plugin-development/\">first</RouterLink> and <RouterLink to=\"/2019/06/wordpress-create-menu/\">second</RouterLink> parts.</p>\n",
    "readingTime": {
      "text": "9 min read",
      "minutes": 8.01,
      "time": 480599.99999999994,
      "words": 1602
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Customize your WooCommerce Cart Page Template",
    "frontmatter": {
      "title": "Customize your WooCommerce Cart Page Template",
      "date": "2019-09-06T00:00:00.000Z",
      "tags": ["WordPress", "WooCommerce", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-09-06-customize-your-woocommerce-cart-page-template/",
    "relativePath": "_posts/2019-09-06-customize-your-woocommerce-cart-page-template/README.md",
    "key": "v-63e32c26",
    "path": "/2019/09/customize-your-woocommerce-cart-page-template/",
    "headers": [{
      "level": 2,
      "title": "1. Clone cart.php",
      "slug": "_1-clone-cart-php"
    }, {
      "level": 2,
      "title": "2. Edit cart.php and change <table> to <ul>",
      "slug": "_2-edit-cart-php-and-change-table-to-ul"
    }, {
      "level": 2,
      "title": "3. Move “Apply Coupons” to the “Cart Totals” section",
      "slug": "_3-move-apply-coupons-to-the-cart-totals-section"
    }, {
      "level": 2,
      "title": "Final code",
      "slug": "final-code"
    }],
    "excerpt": "<p>In a previous article, we saw how to customize the product page. Now, let’s customize our cart page.</p>\n",
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.65,
      "time": 339000,
      "words": 1130
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Publishing your first WordPress Plugin with GIT and SVN",
    "frontmatter": {
      "title": "Publishing your first WordPress Plugin with GIT and SVN",
      "date": "2019-09-18T00:00:00.000Z",
      "tags": ["WordPress", "GIT", "SVN"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-09-18-publishing-your-first-wordpress-plugin-with-git-and-svn/",
    "relativePath": "_posts/2019-09-18-publishing-your-first-wordpress-plugin-with-git-and-svn/README.md",
    "key": "v-0f34fad0",
    "path": "/2019/09/publishing-your-first-wordpress-plugin-with-git-and-svn/",
    "headers": [{
      "level": 2,
      "title": "1. Your current development structure",
      "slug": "_1-your-current-development-structure"
    }, {
      "level": 2,
      "title": "2. The plan",
      "slug": "_2-the-plan"
    }, {
      "level": 2,
      "title": "3. Preparing your code for publishing",
      "slug": "_3-preparing-your-code-for-publishing"
    }, {
      "level": 3,
      "title": "3.1. Know the rules",
      "slug": "_3-1-know-the-rules"
    }, {
      "level": 3,
      "title": "3.2. Choosing a name",
      "slug": "_3-2-choosing-a-name"
    }, {
      "level": 3,
      "title": "3.3. Edit readme.txt (most IMPORTANT step!!!)",
      "slug": "_3-3-edit-readme-txt-most-important-step"
    }, {
      "level": 2,
      "title": "4. Create an SVN repository on WordPress",
      "slug": "_4-create-an-svn-repository-on-wordpress"
    }, {
      "level": 2,
      "title": "5. Setting GIT",
      "slug": "_5-setting-git"
    }, {
      "level": 3,
      "title": "Gitignore",
      "slug": "gitignore"
    }, {
      "level": 3,
      "title": "Init your git repo locally",
      "slug": "init-your-git-repo-locally"
    }, {
      "level": 3,
      "title": "On GitHub (GitLab, etc), create a repo, submit the files",
      "slug": "on-github-gitlab-etc-create-a-repo-submit-the-files"
    }, {
      "level": 2,
      "title": "6. Move your WP installation from my-project to my-project\\working-env",
      "slug": "_6-move-your-wp-installation-from-my-project-to-my-project-working-env"
    }, {
      "level": 2,
      "title": "7. Clone your SVN (it will be empty – they don’t pre-fill it with your zip files)",
      "slug": "_7-clone-your-svn-it-will-be-empty-they-don-t-pre-fill-it-with-your-zip-files"
    }, {
      "level": 2,
      "title": "8. Create a folder for the screenshots/icon/banner (.wordpress-org)",
      "slug": "_8-create-a-folder-for-the-screenshots-icon-banner-wordpress-org"
    }, {
      "level": 2,
      "title": "9. Tweak .distignore",
      "slug": "_9-tweak-distignore"
    }, {
      "level": 2,
      "title": "10. [Optional] Add a screenshot for the plugin’s page",
      "slug": "_10-optional-add-a-screenshot-for-the-plugin-s-page"
    }, {
      "level": 2,
      "title": "11. [Optional] Add Icon and Banner to the plugin page",
      "slug": "_11-optional-add-icon-and-banner-to-the-plugin-page"
    }, {
      "level": 2,
      "title": "12. [FINAL STEP] Submit plugin",
      "slug": "_12-final-step-submit-plugin"
    }, {
      "level": 2,
      "title": "Updating your plugin",
      "slug": "updating-your-plugin"
    }, {
      "level": 3,
      "title": "Update the version",
      "slug": "update-the-version"
    }, {
      "level": 3,
      "title": "Push to GIT",
      "slug": "push-to-git"
    }, {
      "level": 3,
      "title": "Submit the new code",
      "slug": "submit-the-new-code"
    }, {
      "level": 2,
      "title": "Getting Support Notifications For Your Plugin",
      "slug": "getting-support-notifications-for-your-plugin"
    }],
    "excerpt": "<p>When publishing your plugin to the official WordPress repository, you <strong>HAVE to use SVN</strong>. As for September 2019, WordPress doesn't support GIT repos.</p>\n",
    "readingTime": {
      "text": "11 min read",
      "minutes": 10.18,
      "time": 610800,
      "words": 2036
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "WordPress Plugin Development Tutorial: From Zero to Hero",
    "frontmatter": {
      "title": "WordPress Plugin Development Tutorial: From Zero to Hero",
      "date": "2019-06-04T00:00:00.000Z",
      "tags": ["WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-04-wordpress-plugin-development/",
    "relativePath": "_posts/2019-06-04-wordpress-plugin-development/README.md",
    "key": "v-3d46bdb4",
    "path": "/2019/06/wordpress-plugin-development/",
    "headers": [{
      "level": 2,
      "title": "0. My dev environment",
      "slug": "_0-my-dev-environment"
    }, {
      "level": 2,
      "title": "1. WP-CLI",
      "slug": "_1-wp-cli"
    }, {
      "level": 2,
      "title": "2. Have a WordPress instance for the plugin",
      "slug": "_2-have-a-wordpress-instance-for-the-plugin"
    }, {
      "level": 2,
      "title": "3. Our first plugin",
      "slug": "_3-our-first-plugin"
    }, {
      "level": 2,
      "title": "4. Enable debug mode",
      "slug": "_4-enable-debug-mode"
    }, {
      "level": 2,
      "title": "5. Change the headers",
      "slug": "_5-change-the-headers"
    }, {
      "level": 2,
      "title": "6. Security: Prevent direct access to your file",
      "slug": "_6-security-prevent-direct-access-to-your-file"
    }, {
      "level": 2,
      "title": "7. The plugin class",
      "slug": "_7-the-plugin-class"
    }, {
      "level": 3,
      "title": "Next step is to",
      "slug": "next-step-is-to"
    }, {
      "level": 3,
      "title": "The resulting code",
      "slug": "the-resulting-code"
    }, {
      "level": 2,
      "title": "8. (OPTIONAL) Good Practice: Do not use globals",
      "slug": "_8-optional-good-practice-do-not-use-globals"
    }, {
      "level": 2,
      "title": "9. (OPTIONAL) Good Practice: Keep class definitions in separated files",
      "slug": "_9-optional-good-practice-keep-class-definitions-in-separated-files"
    }, {
      "level": 3,
      "title": "Incorrect",
      "slug": "incorrect"
    }, {
      "level": 3,
      "title": "Correct",
      "slug": "correct"
    }, {
      "level": 3,
      "title": "[OPTIONAL] Autoloader (PSR-4)",
      "slug": "optional-autoloader-psr-4"
    }, {
      "level": 2,
      "title": "10. Hooks: filters and actions",
      "slug": "_10-hooks-filters-and-actions"
    }, {
      "level": 3,
      "title": "10.1. Actions",
      "slug": "_10-1-actions"
    }, {
      "level": 3,
      "title": "10.2. Filters",
      "slug": "_10-2-filters"
    }, {
      "level": 2,
      "title": "11. Debug: Viewing hooks",
      "slug": "_11-debug-viewing-hooks"
    }, {
      "level": 3,
      "title": "11.1. Usage",
      "slug": "_11-1-usage"
    }],
    "excerpt": "<p>This is the first part of my <strong>WordPress Plugin Development</strong> tutorial. <RouterLink to=\"/2019/06/wordpress-create-menu/\">Check second part here</RouterLink>.</p>\n",
    "readingTime": {
      "text": "14 min read",
      "minutes": 13.22,
      "time": 793200,
      "words": 2644
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Customize your WooCommerce product page",
    "frontmatter": {
      "title": "Customize your WooCommerce product page",
      "date": "2019-08-13T00:00:00.000Z",
      "tags": ["WooCommerce", "WordPress", "PHP"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-08-13-customize-your-woocommerce-product-page/",
    "relativePath": "_posts/2019-08-13-customize-your-woocommerce-product-page/README.md",
    "key": "v-929308b0",
    "path": "/2019/08/customize-your-woocommerce-product-page/",
    "headers": [{
      "level": 2,
      "title": "1. Templates",
      "slug": "_1-templates"
    }, {
      "level": 3,
      "title": "1.1. Changing the template files",
      "slug": "_1-1-changing-the-template-files"
    }, {
      "level": 2,
      "title": "2. Hooks",
      "slug": "_2-hooks"
    }, {
      "level": 2,
      "title": "Examples",
      "slug": "examples"
    }, {
      "level": 3,
      "title": "Remove \"Short Description\"",
      "slug": "remove-short-description"
    }, {
      "level": 3,
      "title": "Price before Title",
      "slug": "price-before-title"
    }, {
      "level": 3,
      "title": "Description after Title",
      "slug": "description-after-title"
    }, {
      "level": 3,
      "title": "Remove Tabs",
      "slug": "remove-tabs"
    }, {
      "level": 2,
      "title": "Reference",
      "slug": "reference"
    }],
    "excerpt": "<p>Unfortunately, it is difficult to change a WooCommerce page as their HTML code is rendered programmatically.</p>\n",
    "readingTime": {
      "text": "10 min read",
      "minutes": 9.88,
      "time": 592800.0000000001,
      "words": 1976
    },
    "id": "post",
    "pid": "post"
  }, {
    "title": "Creating a Menu for your Plugin [WordPress Development – Part 2]",
    "frontmatter": {
      "title": "Creating a Menu for your Plugin [WordPress Development – Part 2]",
      "date": "2019-06-17T00:00:00.000Z",
      "tags": ["WordPress", "PHP", "WP Plugin Development"],
      "author": "Daniel Loureiro",
      "readingShow": "top",
      "layout": "Post",
      "permalink": "/:year/:month/:slug"
    },
    "regularPath": "/_posts/2019-06-17-wordpress-create-menu/",
    "relativePath": "_posts/2019-06-17-wordpress-create-menu/README.md",
    "key": "v-6e512858",
    "path": "/2019/06/wordpress-create-menu/",
    "headers": [{
      "level": 2,
      "title": "1. Adding a menu item",
      "slug": "_1-adding-a-menu-item"
    }, {
      "level": 2,
      "title": "2. Admin page (HTML)",
      "slug": "_2-admin-page-html"
    }, {
      "level": 3,
      "title": "Explanation",
      "slug": "explanation"
    }, {
      "level": 3,
      "title": "$option_group",
      "slug": "option-group"
    }, {
      "level": 2,
      "title": "Sections",
      "slug": "sections"
    }, {
      "level": 2,
      "title": "Fields",
      "slug": "fields"
    }, {
      "level": 2,
      "title": "Saving",
      "slug": "saving"
    }, {
      "level": 2,
      "title": "Retrieving data",
      "slug": "retrieving-data"
    }, {
      "level": 3,
      "title": "Escape the output",
      "slug": "escape-the-output"
    }, {
      "level": 2,
      "title": "4. Validation and Sanitization",
      "slug": "_4-validation-and-sanitization"
    }, {
      "level": 2,
      "title": "5. Permissions",
      "slug": "_5-permissions"
    }, {
      "level": 2,
      "title": "6. DRYing the code",
      "slug": "_6-drying-the-code"
    }, {
      "level": 3,
      "title": "Final code",
      "slug": "final-code"
    }, {
      "level": 2,
      "title": "7. Custom Main Menu",
      "slug": "_7-custom-main-menu"
    }, {
      "level": 3,
      "title": "Custom icon",
      "slug": "custom-icon"
    }, {
      "level": 3,
      "title": "Custom position (ex. between Tools and Settings)",
      "slug": "custom-position-ex-between-tools-and-settings"
    }, {
      "level": 2,
      "title": "8. Sub-menus (for custom main menu only)",
      "slug": "_8-sub-menus-for-custom-main-menu-only"
    }, {
      "level": 3,
      "title": "Setting a different title for the first sub-menu item",
      "slug": "setting-a-different-title-for-the-first-sub-menu-item"
    }, {
      "level": 2,
      "title": "9. Server Communication",
      "slug": "_9-server-communication"
    }, {
      "level": 3,
      "title": "9.1. admin_post_{$plugin_action}",
      "slug": "_9-1-admin-post-plugin-action"
    }, {
      "level": 3,
      "title": "9.2. Adding security - Nonces and permissions",
      "slug": "_9-2-adding-security-nonces-and-permissions"
    }, {
      "level": 3,
      "title": "9.3. Replacing the \"Save\" button with your custom one",
      "slug": "_9-3-replacing-the-save-button-with-your-custom-one"
    }, {
      "level": 2,
      "title": "10.  The Router method (an alternative to \"admin_post\")",
      "slug": "_10-the-router-method-an-alternative-to-admin-post"
    }],
    "excerpt": "<p>This is the second part of my WordPress Plugin Development tutorial. Here's the <RouterLink to=\"/2019/06/wordpress-plugin-development/\">previous</RouterLink> and <RouterLink to=\"/2019/07/wordpress-ajax-rest-api/\">next</RouterLink> parts.</p>\n",
    "readingTime": {
      "text": "18 min read",
      "minutes": 17.065,
      "time": 1023900.0000000001,
      "words": 3413
    },
    "id": "post",
    "pid": "post"
  }, {
    "frontmatter": {
      "layout": "Layout",
      "title": "Post",
      "readingShow": "top"
    },
    "regularPath": "/",
    "key": "v-b2754d56",
    "path": "/"
  }, {
    "frontmatter": {
      "layout": "Layout",
      "title": "Page 2 | Post",
      "readingShow": "top"
    },
    "regularPath": "/page/2/",
    "key": "v-8fdafa70",
    "path": "/page/2/"
  }, {
    "frontmatter": {
      "layout": "Layout",
      "title": "Page 3 | Post",
      "readingShow": "top"
    },
    "regularPath": "/page/3/",
    "key": "v-8fdafa32",
    "path": "/page/3/"
  }, {
    "frontmatter": {
      "layout": "Layout",
      "title": "Page 4 | Post",
      "readingShow": "top"
    },
    "regularPath": "/page/4/",
    "key": "v-8fdaf9f4",
    "path": "/page/4/"
  }],
  "themeConfig": {}
};"},null]}